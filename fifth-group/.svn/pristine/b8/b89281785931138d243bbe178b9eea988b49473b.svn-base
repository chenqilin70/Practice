package com.oracle.struts.model.action;


import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;

import com.mysql.shopping.model.dao.BackstageUserDAOImp;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;

import admin.com.oracle.model.bean.BackstageUser;
import admin.com.oracle.model.bean.Limitbean;

public class LimitAction extends AbstractInterceptor {

	@Override
	public String intercept(ActionInvocation arg0) throws Exception {
		//获取URL
		HttpServletRequest re=ServletActionContext.getRequest();
		HttpSession se=ServletActionContext.getRequest().getSession();
		String reurl=re.getRequestURL().toString();
		String actionname=null;
		String methodname=null;
		String jspname=null;
		System.out.println(reurl);
		BackstageUser logeduser=(BackstageUser)se.getAttribute("user");
		System.out.println(logeduser);
		
		
		//调用dao
		BackstageUserDAOImp b=new BackstageUserDAOImp();
		if(reurl.contains("!")){
			actionname=reurl.substring(reurl.lastIndexOf("/")+1, reurl.indexOf("!"));
			if(reurl.contains(".")){
				methodname=reurl.substring(reurl.indexOf("!")+1, reurl.lastIndexOf("."));
			}else{
				methodname=reurl.substring(reurl.indexOf("!")+1);
			}
			System.out.println(actionname);
			System.out.println(methodname);
			// TODO Auto-generated method stub
		}else{
			jspname=reurl.substring(reurl.lastIndexOf("/")+1,reurl.lastIndexOf("."));
			System.out.println(jspname);
		}
		
		int userid = logeduser.getUserid();
		BackstageUser user=new BackstageUser();
		user=b.getuserbyid(userid);
		if(jspname!=null){
			if(jspname.equals("manager")){
				if(user.getIdentityid()==1){
					return arg0.invoke();
				}else{
					return "nolimit";
				}
			}else{
				return arg0.invoke();
			}
		}
		
		List<Limitbean> s=new ArrayList<>();
		s=b.getlimit(userid);
		for (Limitbean l : s) {
			if(l.getLimitaction().equals(actionname)){
				return arg0.invoke();
			}
		}
		
		return "nolimit";
		
	}

}
