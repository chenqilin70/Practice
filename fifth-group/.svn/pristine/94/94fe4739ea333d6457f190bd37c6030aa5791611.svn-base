package com.oracle.struts.model.action;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.List;

import org.apache.struts2.ServletActionContext;

import com.mysql.shopping.model.bean.Goods;
import com.mysql.shopping.model.dao.GoodsDAO;
import com.mysql.shopping.model.dao.GoodsDAOimp;
import com.opensymphony.xwork2.ActionSupport;

import admin.com.oracle.model.bean.Product;
import admin.com.oracle.model.bean.productPage;

@SuppressWarnings("serial")
public class ProductAction extends ActionSupport {
	
	private GoodsDAO  dao;
	public GoodsDAO getDao() {
		return dao;
	}
	public void setDao(GoodsDAO dao) {
		this.dao = dao;
	}
	public ProductAction(){
		dao=new GoodsDAOimp();
	}
	
	/**
	 * 这是商品管理添加商品的方法
	 * */
	public String addproduct()
	{
		boolean result=	dao.addProduct(p);
		return result?"addsuccess":"adderror";
	}
	/**
	 * 这是商品管理查询商品信息的方法
	 * */
	private productPage pg;
	List<Goods> ps;
	public productPage getPg() {
		return pg;
	}
	public void setPg(productPage pg) {
		this.pg = pg;
	}
	public List<Goods> getPs() {
		return ps;
	}
	public void setPs(List<Goods> ps) {
		this.ps = ps;
	}
	
	public String selectproduct(){
		System.out.println(pg.getPage());
		int page=pg.getPage();
		int value=pg.getValue();
		int counts=dao.getAllProduct();
		int nowpage=page;
		int firstpage=1;
		int lastpage=(counts%pg.getValue()==0)?(counts%pg.getValue()):(counts%pg.getValue()+1);
		System.out.println(nowpage);
		int prexpage=(nowpage==1)?1:(nowpage-1);
		int nextpage=(nowpage==((counts%pg.getValue()==0)?(counts%pg.getValue()):(counts%pg.getValue()+1))?((counts%pg.getValue()==0)?(counts%pg.getValue()):(counts%pg.getValue()+1)):(nowpage+1));
		System.out.println("上一页："+lastpage);
		System.out.println("下一页"+nextpage);
		ps=dao.listAllProduct(nowpage, 10);
		productPage pg=new productPage(page,value,counts,nowpage,lastpage,nextpage,prexpage,firstpage);
		ServletActionContext.getRequest().setAttribute("pg", pg);
		ServletActionContext.getRequest().setAttribute("ps", ps);
		System.out.println(ps);
		if(ps!=null)
		{
			return "selectsuccess";
		}else
		{
			return "selecterror";
		}
	}
	/**
	 * 这是商品管理获取单一商品信息的方法
	 * */
	private String productid;
	public String getProductid() {
		return productid;
	}
	public void setProductid(String productid) {
		this.productid = productid;
	}
	
	public String getproduct(){
		Goods update=dao.updateProduct(productid);
		ServletActionContext.getRequest().setAttribute("update", update);
		System.out.println(update);
		if(update!=null)
		{
			return "getsuccess";
		}else
		{
			return "geterror";
		}
	}
	/**
	 * 这是商品管理更改商品信息的方法
	 * */
	private Product p;
	public Product getP() {
		return p;
	}
	public void setP(Product p) {
		this.p = p;
	}
	public String updateproduct(){
		System.out.println("修改后为："+p);
		boolean updateresult=dao.updateproduct(p);
		return updateresult?"updatesuccess":"updateerror";
	}
	/**
	 * 这是商品管理删除商品信息的方法
	 * */
	public String deleteproduct(){
		System.out.println("马上删除");
		System.out.println("删除的是："+p);
		boolean deleteproduct=dao.deleteproduct(productid);
		return deleteproduct?"deletesuccess":"deleteerror";
	}
	/**
	 * 这是导出数据的方法
	 * */
	private InputStream excelStream;
	public InputStream getExcelStream() {
		return excelStream;
	}
	public void setExcelStream(InputStream excelStream) {
		this.excelStream = excelStream;
	}
	public String outputdata(){
		StringBuffer excelBuf = new StringBuffer();
	    excelBuf.append("BookName").append("\t").append("Year").append("\t").append("author").append("\n");
	    excelBuf.append("Thinking in Java").append("\t").append("2001").append("\t").append("Eckel").append("\n");
	    excelBuf.append("Spring in action").append("\t").append("2005").append("\t").append("Rod").append("\n");
	    String excelString = excelBuf.toString();
	    excelStream = new ByteArrayInputStream(excelString.getBytes(), 0, excelString.length());
	    return "excel";
	}
	
	
}
